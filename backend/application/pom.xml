<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.perdian.yavin</groupId>
        <artifactId>yavin-backend</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <groupId>de.perdian.yavin</groupId>
    <artifactId>yavin-backend-application</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <containerRegistry.url>localhost</containerRegistry.url>
        <containerRegistry.username>DUMMY_USERNAME</containerRegistry.username>
        <containerRegistry.password>DUMMY_PASSWORD</containerRegistry.password>
        <containerImage.tag>local-commit-${buildNumber}</containerImage.tag>
        <containerImage.name>${project.groupId}/${project.artifactId}</containerImage.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <!--
                                We use an explicit classifier for the resulting repackaged JAR file,
                                so that the original artifact stays the same and can be dpeloyed to a
                                registry. This allows other artifacts (e.g. the development artifact)
                                to use the results as a regular dependency
                            -->
                            <classifier>complete</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>create-metadata</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/META-INF/build</outputDirectory>
                            <outputName>scm.properties</outputName>
                            <revisionOnScmFailure>unknown</revisionOnScmFailure>
                            <ignoreEmptyScmUrl>true</ignoreEmptyScmUrl>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot.version}</version>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <goals>
                                    <goal>build-image-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <docker>
                                <publishRegistry>
                                    <url>${containerRegistry.url}</url>
                                    <username>${containerRegistry.username}</username>
                                    <password>${containerRegistry.password}</password>
                                    <token>${containerRegistry.token}</token>
                                </publishRegistry>
                            </docker>
                            <image>
                                <name>${containerRegistry.url}/${containerImage.name}:${containerImage.tag}</name>
                            </image>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
